import "DInvestment.dj"
import "DRetirement.dj"
import "DUnSyncUpdate.dj"
import "DSyncBonus.dj"
import "DWithHolder.dj"

features Base, Sync, Retirement, Investment, WithHolder

configurations
Base;
Base, Investment;
Base, Retirement;
Base, Sync;
Base, Investment, Sync;
Base, Retirement, Sync;
Base, Investment, WithHolder;
Base, Retirement, WithHolder;
Base, Investment, Sync, WithHolder;
Base, Retirement, Sync, WithHolder;

core Base, Sync {
   class Account {
   int balance;
        Lock lock;	
  
       void unsyncUpdate(int x) {		
           this.balance = new MyMath().add(this.balance, x);		
        }	
    	
       void update(int x) {		
           this.lock.lock();		
           this.unsyncUpdate(x);		
           this.lock.unlock();		
       }	
    }
}